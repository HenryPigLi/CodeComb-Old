@model Problem
@{
    ViewBag.Title = "编辑数据 - " + Model.Title;
    var IsMaster = (bool)ViewBag.IsMaster;
    var IsCreator = (bool)ViewBag.IsCreator;
    string[] Css = { "green", "blue", "orange", "purple" };
}
<div class="post-detail-body">
    <div class="cont-wrap">
        <div class="grid_12">
            <div class="post-detail-wrap-outer">
                <div class="profile-actions">
                    <a href="/Contest/Settings/Problems/@Model.ContestID" class="profile-btn"><img src="/Images/back.png" alt="返回列表" /></a>
                    <a href="/Problem/Edit/@Model.ID" class="profile-btn"><img src="/Images/description.png" alt="基本信息" /></a>
                    <a href="/Problem/TestCases/@Model.ID" class="profile-btn"><img src="/Images/code.png" alt="测试数据" /></a>
                    <a href="/Problem/Special/@Model.ID" class="profile-btn"><img src="/Images/judgers.png" alt="特殊比较" /></a>
                    <a href="/Problem/Standard/@Model.ID" class="profile-btn"><img src="/Images/judgers.png" alt="标准程序" /></a>
                    <a href="/Problem/Range/@Model.ID" class="profile-btn"><img src="/Images/judgers.png" alt="数据校验" /></a>
                    <a href="/Solution/@Model.ID" class="profile-btn"><img src="/Images/contests.png" alt="解题报告" /></a>
                </div>
                <div class="post-detail-wrap">
                    <div class="post-title"><h2>测试数据 - @Model.Title</h2></div>
                    <div class="post-info"></div>
                    <div class="post-content">
                        <p><a href="javascript:$.colorbox({ inline: true, width: 'auto', href: '#TestCaseUpload'});">上传打包数据</a> <a href="javascript:$.colorbox({ inline: true, width: 'auto', href: '#TestCaseTextUpload'});">上传手打数据</a></p>
                        @using (Html.BeginForm("ChangeTestCaseType", "Problem", null, FormMethod.Post, new { id="frmChangeType"}))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="tid" id="TestCaseID" />
                            <input type="hidden" name="type" id="TestCaseType" />
                        }
                        <table>
                            <thead>
                                <tr>
                                    <th>输入大小</th>
                                    <th>输出大小</th>
                                    <th>类型</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.TestCases.OrderBy(x => x.Type))
                                { 
                                    <tr>
                                        <td>@(item.Input.Length / 1024) KiB</td>
                                        <td>@(item.Output.Length / 1024) KiB</td>
                                        <td>
                                            <select class="lstTestCaseType" tid="@item.ID">
                                                @{
                                                    var names = Enum.GetNames(typeof(CodeComb.Entity.TestCaseType));
                                                    for (var i = 0; i < names.Count(); i++)
                                                    {
                                                        if (item.TypeAsInt == i)
                                                        { 
                                                            <option value="@i" selected>@names[i]</option>
                                                        }
                                                        else
                                                        { 
                                                            <option value="@i">@names[i]</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </td>
                                        <td><a href="javascript:EditTestCase(@item.ID)">编辑</a> <a href="javascript:$('#DeleteID').val(@item.ID);$('#frmDeleteTestCase').submit();">删除</a> </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @using (Html.BeginForm("DeleteTestCase", "Problem", null, FormMethod.Post, new { id = "frmDeleteTestCase" }))
                        { 
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="DeleteID" name="id" />
                        }
                    </div>
                </div>
            </div>
        </div><div class="clear"></div>
    </div>
</div>
<div style="display:none">
    <div id="TestCaseUpload">
        @using (Html.BeginForm("TestCaseUpload", "Problem", new { id = Model.ID }, FormMethod.Post, new { id = "frmTestCaseUpload", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h3>上传打包测试数据</h3>
            <p><input type="file" name="file" accept="application/x-zip-compressed" /></p>
            <p>服务器将自动匹配压缩文档中的.in/.out/.ans文件，支持格式：*.zip, *.tar</p>
            <p><input type="submit" value="上传" class="button button-def" /></p>
        }
    </div>

    <div id="TestCaseTextUpload">
        @using (Html.BeginForm("TestCaseTextUpload", "Problem", new { id = Model.ID }, FormMethod.Post, new { id = "frmTestCaseUpload" }))
        {
            @Html.AntiForgeryToken()
            <h3>上传数据</h3>
            <table style="width:700px">
                <thead>
                    <tr>
                        <th style="width:50%">输入</th>
                        <th style="width:50%">输出</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><textarea name="input" style="width: 100%; height: 220px; border: none;"></textarea></td>
                        <td><textarea name="output" style="width: 100%; height: 220px; border: none;"></textarea></td>
                    </tr>
                </tbody>
            </table>
            <p><input type="submit" value="上传" class="button button-def" /></p>
        }
    </div>
    <div id="TestCaseEdit">
        @using (Html.BeginForm("TestCaseEdit", "Problem", null, FormMethod.Post, new { id = "frmTestCaseUpload" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" id="EditID" name="id" />
            <h3>编辑数据</h3>
            <table style="width:700px">
                <thead>
                    <tr>
                        <th style="width:50%">输入</th>
                        <th style="width:50%">输出</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><textarea name="input" id="txtInput" style="width: 100%; height: 220px; border: none;"></textarea></td>
                        <td><textarea name="output" id="txtOutput" style="width: 100%; height: 220px; border: none;"></textarea></td>
                    </tr>
                </tbody>
            </table>
            <p><input type="submit" value="提交" class="button button-def" /></p>
        }
    </div>
</div>
    
<script>
    $(".lstTestCaseType").change(function () {
        var tid = $(this).attr("tid");
        $("#TestCaseID").val(tid);
        $("#TestCaseType").val($(this).val());
        $.post("/Problem/ChangeTestCaseType/", $("#frmChangeType").serialize(), function () {
            CastMsg("测试数据类型已修改！");
        });
    });
</script>